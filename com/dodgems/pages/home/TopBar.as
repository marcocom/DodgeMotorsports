package com.dodgems.pages.home{	import com.barliesque.utils.applyText;	import com.dodgems.grid.gadget.ButtonEvent;	import flash.display.Stage;	import flash.display.*;	import flash.text.*;	import flash.events.*;	import flash.geom.Rectangle;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.net.navigateToURL;	import com.greensock.TweenMax;	import com.greensock.easing.*;		import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	import com.dodgems.Global;		import com.gaiaframework.api.*;	import com.gaiaframework.templates.AbstractPage;	import com.greensock.TweenLite;	public class TopBar extends Sprite {				private const TEAR_WIDTH:Number = 80;				public var top_but:MovieClip;		public var grillImage:MovieClip;				private var hoverLink:String;		public var cta_txt:TextField;		public var hover:MovieClip;		private var loaderClip:DisplayObject;				private var sndChannel:SoundChannel;		private var sndEffect:tearSound;				private var beforeLoaderStart:Function;		private var beforeTransStart:Function;		private var beforeGotoStart:Function;		private var homeClip:DisplayObject;		public function TopBar() {			addEventListener(Event.ADDED_TO_STAGE, onAdded, false, 0, true);		}		private function onAdded(e:Event = null):void {			if (e) removeEventListener(Event.ADDED_TO_STAGE, onAdded);			addEventListener(Event.REMOVED_FROM_STAGE, onRemoved, false, 0, true);						loaderClip = Gaia.api.getPreloader().content;						stage.addEventListener(Event.RESIZE, resizePos, false, 100, true);			resizePos();						grillImage.mouseEnabled = grillImage.mouseChildren = false;		}				private function onRemoved(e:Event):void {			removeEventListener(Event.REMOVED_FROM_STAGE, onRemoved);			stage.removeEventListener(Event.RESIZE, resizePos);		}						public function popData(d:XMLList, tearEnabled:Boolean):void {			hoverLink = d.@href;			applyText(d.valueOf(), cta_txt, false, false, true);			cta_txt.addEventListener(MouseEvent.MOUSE_OVER, showGraphic, false, 0, true);			cta_txt.addEventListener(MouseEvent.CLICK, hoverClick, false, 0, true);			cta_txt.mouseEnabled = true;						ButtonEvent.makeButton(hover);			hover.addEventListener(MouseEvent.CLICK, hoverClick, false, 0, true);			hover.addEventListener(ButtonEvent.ROLL_OUT, hideHover, false, 0, true);						if (tearEnabled) {				top_but.addEventListener(MouseEvent.MOUSE_OVER, tearOver, false, 0, true);				top_but.addEventListener(MouseEvent.MOUSE_OUT, tearOut, false, 0, true);				top_but.buttonMode = true;				top_but.hitArea = top_but["hit"];				top_but["foreShadow"].mouseEnabled = false;			} else {				removeChild(top_but);			}						resizePos();						animBG();		}						private function resizePos(...ignore):void {			var c:Number = ((Gaia.api.getWidth() + stage.stageWidth) / 2) + TEAR_WIDTH;			top_but.x = c;		}						/*		 * Gaia hijack logic.  could get buggy from here		 */		private function tearOver(e:MouseEvent):void {			top_but.isOver = true;			top_but.play();						var mc:MovieClip = top_but.getChildByName("hit") as MovieClip;			top_but.hit.addEventListener(MouseEvent.CLICK, tearClick, false, 0, true);			mc.buttonMode = true;		}						private function tearOut(e:MouseEvent):void {			top_but.isOver = false;			top_but.play();					}						private function tearClick(e:MouseEvent):void {			top_but.gotoAndStop("anim_in");						beforeLoaderStart = Gaia.api.beforeGoto(beforeLoader, true, true);			beforeTransStart = Gaia.api.beforeTransitionOut(beforeTrans, true, true);			Gaia.api.afterTransitionIn(afterFlow, false, true);						homeClip = Gaia.api.getPage("index/nav/home").content;						Gaia.api.getPage("index/nav").content.siteNavCall("hood");		}						public function beforeLoader(e:*):void {			loaderClip.alpha = 0;			beforeLoaderStart();		}						public function beforeTrans(...ignore):void {			top_but.isFinished = afterAnim;			top_but.gotoAndPlay("anim_in");						sndEffect = new tearSound();			sndChannel = sndEffect.play();			var st:SoundTransform = new SoundTransform();			st.volume = Global.GLOBALVOLUME;			sndChannel.soundTransform = st;									var mcbg:MovieClip = top_but.getChildByName("comp") as MovieClip;			mcbg.x = Gaia.api.getSitePosition().x - top_but.x + ((Gaia.api.getWidth() - top_but.x) / 2);						TweenLite.to(mcbg, 0.2, { alpha:1 } );		}				private function afterAnim(...ignore):void {			this.visible = true;			beforeTransStart();			homeClip.visible = false;		}				private function afterFlow(...ignore):void {			homeClip.visible = false;			loaderClip.visible = true;			loaderClip.alpha = 1;			this.visible = false;		}						private function animBG():void {			hover.y = 0 - hover.height;			hover.buttonMode = true;			visible = true;		}						private function showGraphic(e:Event):void {			TweenMax.to(hover, 0.5, { y: 0, ease: Quint.easeOut, onComplete: stillOver } );		}				private function stillOver():void {			//  In case the mouse is already off of the hover graphic			if (!hover.hitTestPoint(stage.mouseX, stage.mouseY)) hideHover();		}				private function hideHover(...ignore):void {			TweenMax.to(hover, 0.5, { y: 0 - hover.height, ease: Quint.easeIn } );		}				private function hoverClick(e:Event):void {			navigateToURL(new URLRequest(hoverLink), "_blank");			hideHover();		} 			}}
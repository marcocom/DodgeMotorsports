package com.dodgems.pages.nav{	import com.gaiaframework.templates.AbstractPage;	import com.gaiaframework.events.*;	import com.gaiaframework.debug.*;	import com.gaiaframework.api.*;	import flash.display.*;	import flash.text.*;	import flash.events.*;	import flash.utils.Timer;	import flash.geom.Rectangle;	import flash.geom.ColorTransform;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	import flash.net.URLLoader;	import flash.net.URLLoaderDataFormat;	import flash.net.sendToURL;	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.dodgems.Global;	public class VIPWidget extends Sprite {		public var logo:MovieClip;		public var bg:MovieClip;		public var dataXML:XMLList;		public var submitBut:MovieClip;		public var closeBut:MovieClip;		public var nameField:MovieClip;		public var emailField:MovieClip;		public var emailtxt:TextField;		public var nametxt:TextField;		public var titletxt:TextField;		public var txtContainer:Sprite;		private var nameString:String;		private var emailString:String;		private var submitURL:String;				private var submitTimer:Timer = new Timer(3000, 1);				private var errorColor:ColorTransform =  new ColorTransform(1, 1, 1, 1, 255, -255, -255, 1);		private static const LINESPACER:Number = 30;				public function VIPWidget(dataXML:XMLList) {						this.dataXML = dataXML;			submitURL = dataXML.@submitVIP;						addEventListener(Event.ADDED_TO_STAGE, onAdded, false, 0, true);		}						private function onAdded(e:Event):void  {			removeEventListener(Event.ADDED_TO_STAGE, onAdded);						createWidget();			closeBut.addEventListener(MouseEvent.CLICK, closeAction, false, 0, true);			closeBut.addEventListener(MouseEvent.MOUSE_OVER, butOver, false, 0, true);			closeBut.addEventListener(MouseEvent.MOUSE_OUT, butOut, false, 0, true);						submitBut.addEventListener(MouseEvent.CLICK, submitAction, false, 0, true);			submitBut.addEventListener(MouseEvent.MOUSE_OVER, butOver, false, 0, true);			submitBut.addEventListener(MouseEvent.MOUSE_OUT, butOut, false, 0, true);						nametxt.restrict = "A-Z a-z 0-9";			emailtxt.restrict = "A-Z a-z 0-9 @ .";						nametxt.tabEnabled = true;			emailtxt.tabEnabled = true;			nametxt.tabIndex = 1;			emailtxt.tabIndex = 2;			            addEventListener(KeyboardEvent.KEY_UP, keyUpHandler, false, 0, true);		}		        private function keyUpHandler(event:KeyboardEvent):void {            if(event.keyCode == 13) submitAction(null);        }        		private function submitAction(e:MouseEvent):void {			var namevalid:Boolean;			var emailvalid:Boolean;						nameField.transform.colorTransform = new ColorTransform(1,1,1,1,1,1,1,1);			emailField.transform.colorTransform = new ColorTransform(1,1,1,1,1,1,1,1);						if (nametxt.text.length>0) {				namevalid=true;			} else {				nameField.transform.colorTransform = errorColor;			}						if(emailtxt.text.length > 5 && emailtxt.text.indexOf("@") > 1){				emailvalid = true;			} else {				emailField.transform.colorTransform = errorColor;			}						if (namevalid && emailvalid) postAction();		}						private function postAction():void {			            var variables:URLVariables = new URLVariables();            variables.userName = nametxt.text;            variables.userEmail = emailtxt.text;                        var request:URLRequest = new URLRequest(submitURL);            request.data = variables;                        var loader:URLLoader = new URLLoader();			loader.dataFormat = URLLoaderDataFormat.VARIABLES;			loader.addEventListener(Event.COMPLETE, postHandler);                        trace("sendToURL: " + request.url + "?" + request.data);            			loader.load(request);		}						private function postHandler(e:Event):void {            var loader:URLLoader = e.target as URLLoader;                        if(loader.data.success == "OK"){            					titletxt.transform.colorTransform = new ColorTransform(1,1,1,1,1,1,1,1);				txtContainer.visible = false;				titletxt.text = "THANK YOU FOR YOUR CONTACT INFORMATION";				titletxt.width = titletxt.textWidth + 10;				titletxt.y = 70;				submitTimer.addEventListener(TimerEvent.TIMER_COMPLETE, closeAction, false, 0, true);				submitTimer.start();				            } else  if(loader.data.success == "DUP"){            	txtContainer.visible = false;				titletxt.text = "YOUR INFO HAS ALREADY BEEN SUBMITTED. THANK YOU";				titletxt.width = titletxt.textWidth + 10;				titletxt.y = 70;				titletxt.transform.colorTransform = errorColor;				emailField.transform.colorTransform = errorColor;				            } else if(loader.data.success == "NO"){            	txtContainer.visible = false;				titletxt.text = "PLEASE CHECK YOUR EMAIL ADDRESS AND TRY AGAIN. THANK YOU";				titletxt.width = titletxt.textWidth + 10;				titletxt.y = 70;				titletxt.transform.colorTransform = errorColor;				emailField.transform.colorTransform = errorColor;            }        }        				private function createWidget():void {			titletxt.text = dataXML.@title;			txtContainer = new Sprite();			addChild(txtContainer);			txtContainer.x = titletxt.x + 10;			txtContainer.y = (titletxt.y + titletxt.textHeight + 5);			for (var i:int; i < dataXML.elements().length(); i++) {				var mc:VipTxt = new VipTxt();				var txt:TextField = mc.getChildByName("txt") as TextField;				txt.text = dataXML.bullet[i].@txt;				txt.width = txt.textWidth + 10;				txtContainer.addChild(mc);				mc.y = i*LINESPACER;			}		}						//handlers		private function closeAction(e:Event):void {			parent.removeChild(this);		}				private function butOver(e:MouseEvent):void  {			var mc:MovieClip = e.currentTarget as MovieClip;			mc.gotoAndStop(2);		}		private function butOut(e:MouseEvent):void  {			var mc:MovieClip = e.currentTarget as MovieClip;			mc.gotoAndStop(1);		}					}}
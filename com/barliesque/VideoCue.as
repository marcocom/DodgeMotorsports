
/**
 * 
 * MORFsite - Flash Framework 
 * by David Barlia (c) 2009
 *
 * This is a modified version of the class VideoCue,
 * which is a part of the MORFsite framework by David Barlia.
 * 
 */

package com.barliesque {
	
	/**
	 * VideoCue is a dual purpose class, providing a container for
	 * cue point data as it's encountered embedded in a video file,
	 * as well as providing for the ability to dynamically set cue
	 * point data.
	 * 
	 * @author David Barlia
	 */
	public class VideoCue {
		
		private var _name:String;
		private var _parameters:Object;
		private var _time:Number;
		private var _isEvent:Boolean;
		private var _embedded:Boolean = false;
		
		internal var oldTime:Number = 0;
		
		/**
		 * A new VideoCue object is automatically generated by the VideoStream class whenever
		 * it encounters a cue point in a video that's being played.  Alternatively, ...
		 * 
		 * @param	name
		 * @param	parameters
		 * @param	time
		 * @param	event
		 */
		public function VideoCue(name:String, time:Number, parameters:Object = null, isEvent:Boolean = true) {
			_name = name;
			_time = time;
			_parameters = parameters;
			_isEvent = isEvent;
		}
		
		public function get name():String { return _name; }
		
		public function get parameters():Object { return _parameters; }
		
		public function get time():Number { return _time; }
		
		public function get isEvent():Boolean { return _isEvent; }
		
		public function get embedded():Boolean { return _embedded; }
		
		internal function setEmbedded(value:Boolean):void {
			_embedded = value;
		}
		
		/**
		 * VideoStream calls this function every frame to determine if a cue point has been traversed
		 * @param	currentTime
		 * @return
		 */
		internal function checkCue(currentTime:Number):Boolean {
			if (oldTime < _time && currentTime >= _time) {
				//
				// This cue point has been traversed!
				//
				oldTime = currentTime;
				return true;
			}
			oldTime = currentTime;
			return false;
		}
		
	}
}